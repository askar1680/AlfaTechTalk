; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

%objc_class = type { %objc_class*, %objc_class*, %swift.opaque*, %swift.opaque*, i64 }
%swift.opaque = type opaque
%swift.method_descriptor = type { i32, i32 }
%T3AppAAC = type <{ %swift.refcounted, %TSS }>
%swift.refcounted = type { %swift.type*, i64 }
%swift.type = type { i64 }
%TSS = type <{ %Ts11_StringGutsV }>
%Ts11_StringGutsV = type <{ %Ts13_StringObjectV }>
%Ts13_StringObjectV = type <{ %Ts6UInt64V, %swift.bridge* }>
%Ts6UInt64V = type <{ i64 }>
%swift.bridge = type opaque
%swift.type_metadata_record = type { i32 }
%"$s3AppAAC4nameSSvM.Frame" = type { [24 x i8] }
%swift.metadata_response = type { %swift.type*, i64 }

@0 = private unnamed_addr constant [7 x i8] c"Mobile\00"
@1 = private unnamed_addr constant [9 x i8] c"AlfaBank\00"
@"\01l_entry_point" = private constant { i32 } { i32 trunc (i64 sub (i64 ptrtoint (i32 (i32, i8**)* @main to i64), i64 ptrtoint ({ i32 }* @"\01l_entry_point" to i64)) to i32) }, section "__TEXT, __swift5_entry, regular, no_dead_strip", align 4
@"$s3AppAAC4nameSSvpWvd" = hidden constant i64 16, align 8
@"$sBoWV" = external global i8*, align 8
@"$s3AppAACMm" = hidden global %objc_class { %objc_class* @"OBJC_METACLASS_$__TtCs12_SwiftObject", %objc_class* @"OBJC_METACLASS_$__TtCs12_SwiftObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtC3App3App to i64) }, align 8
@"OBJC_CLASS_$__TtCs12_SwiftObject" = external global %objc_class, align 8
@_objc_empty_cache = external global %swift.opaque
@"OBJC_METACLASS_$__TtCs12_SwiftObject" = external global %objc_class, align 8
@2 = private unnamed_addr constant [13 x i8] c"_TtC3App3App\00"
@_METACLASS_DATA__TtC3App3App = internal constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@3 = private unnamed_addr constant [5 x i8] c"name\00"
@4 = private unnamed_addr constant [1 x i8] zeroinitializer
@_IVARS__TtC3App3App = internal constant { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] } { i32 32, i32 1, [1 x { i64*, i8*, i8*, i32, i32 }] [{ i64*, i8*, i8*, i32, i32 } { i64* @"$s3AppAAC4nameSSvpWvd", i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @4, i64 0, i64 0), i32 3, i32 16 }] }, section "__DATA, __objc_const", align 8
@_DATA__TtC3App3App = internal constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, i8* } { i32 128, i32 16, i32 32, i32 0, i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i64 0, i64 0), i8* null, i8* null, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }* @_IVARS__TtC3App3App, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@5 = private constant [4 x i8] c"App\00"
@"$s3AppMXM" = linkonce_odr hidden constant <{ i32, i32, i32 }> <{ i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([4 x i8]* @5 to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32 }>, <{ i32, i32, i32 }>* @"$s3AppMXM", i32 0, i32 2) to i64)) to i32) }>, section "__TEXT,__const", align 4
@"$s3AppAACMn" = hidden constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }> <{ i32 -2147483568, i32 trunc (i64 sub (i64 ptrtoint (<{ i32, i32, i32 }>* @"$s3AppMXM" to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([4 x i8]* @5 to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 2) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (%swift.metadata_response (i64)* @"$s3AppAACMa" to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint ({ i32, i32, i16, i16, i32, i32, i32, i32 }* @"$s3AppAACMF" to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 4) to i64)) to i32), i32 0, i32 2, i32 16, i32 6, i32 1, i32 10, i32 11, i32 5, %swift.method_descriptor { i32 18, i32 trunc (i64 sub (i64 ptrtoint ({ i64, %swift.bridge* } (%T3AppAAC*)* @"$s3AppAAC4nameSSvg" to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 13, i32 1) to i64)) to i32) }, %swift.method_descriptor { i32 19, i32 trunc (i64 sub (i64 ptrtoint (void (i64, %swift.bridge*, %T3AppAAC*)* @"$s3AppAAC4nameSSvs" to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 14, i32 1) to i64)) to i32) }, %swift.method_descriptor { i32 20, i32 trunc (i64 sub (i64 ptrtoint ({ i8*, %TSS* } (i8*, %T3AppAAC*)* @"$s3AppAAC4nameSSvM" to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 15, i32 1) to i64)) to i32) }, %swift.method_descriptor { i32 16, i32 trunc (i64 sub (i64 ptrtoint ({ i64, %swift.bridge* } (%T3AppAAC*)* @"$s3AppAAC7getNameSSyF" to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 16, i32 1) to i64)) to i32) }, %swift.method_descriptor { i32 1, i32 trunc (i64 sub (i64 ptrtoint (%T3AppAAC* (%swift.type*)* @"$s3AppAACABycfC" to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 17, i32 1) to i64)) to i32) } }>, section "__TEXT,__const", align 4
@"$s3AppAACMf" = internal global <{ void (%T3AppAAC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, %swift.bridge* } (%T3AppAAC*)*, void (i64, %swift.bridge*, %T3AppAAC*)*, { i8*, %TSS* } (i8*, %T3AppAAC*)*, { i64, %swift.bridge* } (%T3AppAAC*)*, %T3AppAAC* (%swift.type*)* }> <{ void (%T3AppAAC*)* @"$s3AppAACfD", i8** @"$sBoWV", i64 ptrtoint (%objc_class* @"$s3AppAACMm" to i64), %objc_class* @"OBJC_CLASS_$__TtCs12_SwiftObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, i8* }* @_DATA__TtC3App3App to i64), i64 2), i32 2, i32 0, i32 32, i16 7, i16 0, i32 144, i32 16, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i8* null, i64 16, { i64, %swift.bridge* } (%T3AppAAC*)* @"$s3AppAAC4nameSSvg", void (i64, %swift.bridge*, %T3AppAAC*)* @"$s3AppAAC4nameSSvs", { i8*, %TSS* } (i8*, %T3AppAAC*)* @"$s3AppAAC4nameSSvM", { i64, %swift.bridge* } (%T3AppAAC*)* @"$s3AppAAC7getNameSSyF", %T3AppAAC* (%swift.type*)* @"$s3AppAACABycfC" }>, align 8
@"symbolic _____ 3AppAAC" = linkonce_odr hidden constant <{ i8, i32, i8 }> <{ i8 1, i32 trunc (i64 sub (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn" to i64), i64 ptrtoint (i32* getelementptr inbounds (<{ i8, i32, i8 }>, <{ i8, i32, i8 }>* @"symbolic _____ 3AppAAC", i32 0, i32 1) to i64)) to i32), i8 0 }>, section "__TEXT,__swift5_typeref, regular, no_dead_strip", align 2
@"symbolic SS" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"SS", i8 0 }>, section "__TEXT,__swift5_typeref, regular, no_dead_strip", align 2
@6 = private constant [5 x i8] c"name\00", section "__TEXT,__swift5_reflstr, regular, no_dead_strip"
@"$s3AppAACMF" = internal constant { i32, i32, i16, i16, i32, i32, i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (<{ i8, i32, i8 }>* @"symbolic _____ 3AppAAC" to i64), i64 ptrtoint ({ i32, i32, i16, i16, i32, i32, i32, i32 }* @"$s3AppAACMF" to i64)) to i32), i32 0, i16 1, i16 12, i32 1, i32 2, i32 trunc (i64 sub (i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic SS" to i64), i64 ptrtoint (i32* getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32 }, { i32, i32, i16, i16, i32, i32, i32, i32 }* @"$s3AppAACMF", i32 0, i32 6) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([5 x i8]* @6 to i64), i64 ptrtoint (i32* getelementptr inbounds ({ i32, i32, i16, i16, i32, i32, i32, i32 }, { i32, i32, i16, i16, i32, i32, i32, i32 }* @"$s3AppAACMF", i32 0, i32 7) to i64)) to i32) }, section "__TEXT,__swift5_fieldmd, regular, no_dead_strip", align 4
@"_swift_FORCE_LOAD_$_swiftCompatibility51_$_App" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftCompatibility51"
@"\01l_type_metadata_table" = private constant [1 x %swift.type_metadata_record] [%swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn" to i64), i64 ptrtoint ([1 x %swift.type_metadata_record]* @"\01l_type_metadata_table" to i64)) to i32) }], section "__TEXT, __swift5_types, regular, no_dead_strip", align 4
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@objc_classes = internal global [1 x i8*] [i8* bitcast (%swift.type* @"$s3AppAACN" to i8*)], section "__DATA,__objc_classlist,regular,no_dead_strip", align 8
@llvm.used = appending global [7 x i8*] [i8* bitcast (i32 (i32, i8**)* @main to i8*), i8* bitcast ({ i32 }* @"\01l_entry_point" to i8*), i8* bitcast ({ i32, i32, i16, i16, i32, i32, i32, i32 }* @"$s3AppAACMF" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftCompatibility51_$_App" to i8*), i8* bitcast ([1 x %swift.type_metadata_record]* @"\01l_type_metadata_table" to i8*), i8* bitcast (i16* @__swift_reflection_version to i8*), i8* bitcast ([1 x i8*]* @objc_classes to i8*)], section "llvm.metadata", align 8

@"$s3AppAAC4nameSSvgTq" = hidden alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 13)
@"$s3AppAAC4nameSSvsTq" = hidden alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 14)
@"$s3AppAAC4nameSSvMTq" = hidden alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 15)
@"$s3AppAAC7getNameSSyFTq" = hidden alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 16)
@"$s3AppAACABycfCTq" = hidden alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", i32 0, i32 17)
@"$s3AppAACN" = hidden alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T3AppAAC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, %swift.bridge* } (%T3AppAAC*)*, void (i64, %swift.bridge*, %T3AppAAC*)*, { i8*, %TSS* } (i8*, %T3AppAAC*)*, { i64, %swift.bridge* } (%T3AppAAC*)*, %T3AppAAC* (%swift.type*)* }>, <{ void (%T3AppAAC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, %swift.bridge* } (%T3AppAAC*)*, void (i64, %swift.bridge*, %T3AppAAC*)*, { i8*, %TSS* } (i8*, %T3AppAAC*)*, { i64, %swift.bridge* } (%T3AppAAC*)*, %T3AppAAC* (%swift.type*)* }>* @"$s3AppAACMf", i32 0, i32 2) to %swift.type*)
define i32 @main(i32 %0, i8** %1) #0 {
entry:
  %2 = bitcast i8** %1 to i8*
  ret i32 0
}
define hidden swiftcc { i64, %swift.bridge* } @"$s3AppAAC4nameSSvpfi"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @0, i64 0, i64 0), i64 6, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}
declare swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8*, i64, i1) #0
define hidden swiftcc { i64, %swift.bridge* } @"$s3AppAAC4nameSSvg"(%T3AppAAC* swiftself %0) #0 {
entry:
  %access-scratch = alloca [24 x i8], align 8
  %1 = getelementptr inbounds %T3AppAAC, %T3AppAAC* %0, i32 0, i32 1
  %2 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %2)
  %3 = bitcast %TSS* %1 to i8*
  call void @swift_beginAccess(i8* %3, [24 x i8]* %access-scratch, i64 32, i8* null) #2
  %._guts = getelementptr inbounds %TSS, %TSS* %1, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  %4 = load i64, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  %5 = load %swift.bridge*, %swift.bridge** %._guts._object._object, align 8
  %6 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned %5) #2
  call void @swift_endAccess([24 x i8]* %access-scratch) #2
  %7 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %7)
  %8 = insertvalue { i64, %swift.bridge* } undef, i64 %4, 0
  %9 = insertvalue { i64, %swift.bridge* } %8, %swift.bridge* %5, 1
  ret { i64, %swift.bridge* } %9
}
; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1
; Function Attrs: nounwind
declare void @swift_beginAccess(i8*, [24 x i8]*, i64, i8*) #2
; Function Attrs: nounwind
declare %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned) #2
; Function Attrs: nounwind
declare void @swift_endAccess([24 x i8]*) #2
; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1
define hidden swiftcc void @"$s3AppAAC4nameSSvs"(i64 %0, %swift.bridge* %1, %T3AppAAC* swiftself %2) #0 {
entry:
  %access-scratch = alloca [24 x i8], align 8
  %3 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned %1) #2
  %4 = getelementptr inbounds %T3AppAAC, %T3AppAAC* %2, i32 0, i32 1
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  %6 = bitcast %TSS* %4 to i8*
  call void @swift_beginAccess(i8* %6, [24 x i8]* %access-scratch, i64 33, i8* null) #2
  %._guts = getelementptr inbounds %TSS, %TSS* %4, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  %7 = load i64, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  %8 = load %swift.bridge*, %swift.bridge** %._guts._object._object, align 8
  %._guts1 = getelementptr inbounds %TSS, %TSS* %4, i32 0, i32 0
  %._guts1._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts1, i32 0, i32 0
  %._guts1._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 0
  %._guts1._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts1._object._countAndFlagsBits, i32 0, i32 0
  store i64 %0, i64* %._guts1._object._countAndFlagsBits._value, align 8
  %._guts1._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 1
  store %swift.bridge* %1, %swift.bridge** %._guts1._object._object, align 8
  call void @swift_bridgeObjectRelease(%swift.bridge* %8) #2
  call void @swift_endAccess([24 x i8]* %access-scratch) #2
  %9 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %9)
  call void @swift_bridgeObjectRelease(%swift.bridge* %1) #2
  ret void
}
; Function Attrs: nounwind
declare void @swift_bridgeObjectRelease(%swift.bridge*) #2
; Function Attrs: noinline
define hidden swiftcc { i8*, %TSS* } @"$s3AppAAC4nameSSvM"(i8* noalias dereferenceable(32) %0, %T3AppAAC* swiftself %1) #3 {
entry:
  %FramePtr = bitcast i8* %0 to %"$s3AppAAC4nameSSvM.Frame"*
  %access-scratch = getelementptr inbounds %"$s3AppAAC4nameSSvM.Frame", %"$s3AppAAC4nameSSvM.Frame"* %FramePtr, i32 0, i32 0
  %2 = getelementptr inbounds %T3AppAAC, %T3AppAAC* %1, i32 0, i32 1
  %3 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %3)
  %4 = bitcast %TSS* %2 to i8*
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #2
  %5 = insertvalue { i8*, %TSS* } { i8* bitcast (void (i8*, i1)* @"$s3AppAAC4nameSSvM.resume.0" to i8*), %TSS* undef }, %TSS* %2, 1
  ret { i8*, %TSS* } %5
}
define internal swiftcc void @"$s3AppAAC4nameSSvM.resume.0"(i8* noalias nonnull align 8 dereferenceable(32) %0, i1 %1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s3AppAAC4nameSSvM.Frame"*
  %vFrame = bitcast %"$s3AppAAC4nameSSvM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s3AppAAC4nameSSvM.Frame", %"$s3AppAAC4nameSSvM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s3AppAAC4nameSSvM.Frame", %"$s3AppAAC4nameSSvM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #2
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}
declare swiftcc void @"$s3AppAACSSIetMAgYl_TC"(i8* noalias dereferenceable(32), i1) #0
declare i8* @malloc(i64)
declare void @free(i8*)
; Function Attrs: nounwind
declare token @llvm.coro.id.retcon.once(i32, i32, i8*, i8*, i8*, i8*) #2
; Function Attrs: nounwind
declare i8* @llvm.coro.begin(token, i8* writeonly) #2
; Function Attrs: nounwind
declare i1 @llvm.coro.suspend.retcon.i1(...) #2
; Function Attrs: nounwind
declare i1 @llvm.coro.end(i8*, i1) #2
define hidden swiftcc { i64, %swift.bridge* } @"$s3AppAAC7getNameSSyF"(%T3AppAAC* swiftself %0) #0 {
entry:
  %self.debug = alloca %T3AppAAC*, align 8
  %1 = bitcast %T3AppAAC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %appName.debug = alloca %TSS, align 8
  %2 = bitcast %TSS* %appName.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  store %T3AppAAC* %0, %T3AppAAC** %self.debug, align 8
  %3 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1, i64 0, i64 0), i64 8, i1 true)
  %4 = extractvalue { i64, %swift.bridge* } %3, 0
  %5 = extractvalue { i64, %swift.bridge* } %3, 1
  %6 = bitcast %TSS* %appName.debug to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %6)
  %appName.debug._guts = getelementptr inbounds %TSS, %TSS* %appName.debug, i32 0, i32 0
  %appName.debug._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %appName.debug._guts, i32 0, i32 0
  %appName.debug._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %appName.debug._guts._object, i32 0, i32 0
  %appName.debug._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %appName.debug._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %4, i64* %appName.debug._guts._object._countAndFlagsBits._value, align 8
  %appName.debug._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %appName.debug._guts._object, i32 0, i32 1
  store %swift.bridge* %5, %swift.bridge** %appName.debug._guts._object._object, align 8
  %7 = insertvalue { i64, %swift.bridge* } undef, i64 %4, 0
  %8 = insertvalue { i64, %swift.bridge* } %7, %swift.bridge* %5, 1
  ret { i64, %swift.bridge* } %8
}
; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4
define hidden swiftcc %swift.refcounted* @"$s3AppAACfd"(%T3AppAAC* swiftself %0) #0 {
entry:
  %self.debug = alloca %T3AppAAC*, align 8
  %1 = bitcast %T3AppAAC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T3AppAAC* %0, %T3AppAAC** %self.debug, align 8
  %2 = getelementptr inbounds %T3AppAAC, %T3AppAAC* %0, i32 0, i32 1
  %3 = call %TSS* @"$sSSWOh"(%TSS* %2)
  %4 = bitcast %T3AppAAC* %0 to %swift.refcounted*
  ret %swift.refcounted* %4
}
; Function Attrs: noinline nounwind
define linkonce_odr hidden %TSS* @"$sSSWOh"(%TSS* %0) #5 {
entry:
  %._guts = getelementptr inbounds %TSS, %TSS* %0, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  %toDestroy = load %swift.bridge*, %swift.bridge** %._guts._object._object, align 8
  call void @swift_bridgeObjectRelease(%swift.bridge* %toDestroy) #2
  ret %TSS* %0
}
define hidden swiftcc void @"$s3AppAACfD"(%T3AppAAC* swiftself %0) #0 {
entry:
  %self.debug = alloca %T3AppAAC*, align 8
  %1 = bitcast %T3AppAAC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T3AppAAC* %0, %T3AppAAC** %self.debug, align 8
  %2 = call swiftcc %swift.refcounted* @"$s3AppAACfd"(%T3AppAAC* swiftself %0)
  %3 = bitcast %swift.refcounted* %2 to %T3AppAAC*
  %4 = bitcast %T3AppAAC* %3 to %swift.refcounted*
  call void @swift_deallocClassInstance(%swift.refcounted* %4, i64 32, i64 7)
  ret void
}
; Function Attrs: nounwind
declare void @swift_deallocClassInstance(%swift.refcounted*, i64, i64) #2
define hidden swiftcc %T3AppAAC* @"$s3AppAACABycfC"(%swift.type* swiftself %0) #0 {
entry:
  %1 = call noalias %swift.refcounted* @swift_allocObject(%swift.type* %0, i64 32, i64 7) #2
  %2 = bitcast %swift.refcounted* %1 to %T3AppAAC*
  %3 = call swiftcc %T3AppAAC* @"$s3AppAACABycfc"(%T3AppAAC* swiftself %2)
  ret %T3AppAAC* %3
}
; Function Attrs: nounwind
declare %swift.refcounted* @swift_allocObject(%swift.type*, i64, i64) #2
define hidden swiftcc %T3AppAAC* @"$s3AppAACABycfc"(%T3AppAAC* swiftself %0) #0 {
entry:
  %self.debug = alloca %T3AppAAC*, align 8
  %1 = bitcast %T3AppAAC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T3AppAAC* %0, %T3AppAAC** %self.debug, align 8
  %2 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @0, i64 0, i64 0), i64 6, i1 true)
  %3 = extractvalue { i64, %swift.bridge* } %2, 0
  %4 = extractvalue { i64, %swift.bridge* } %2, 1
  %5 = getelementptr inbounds %T3AppAAC, %T3AppAAC* %0, i32 0, i32 1
  %6 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %6)
  %7 = bitcast %TSS* %5 to i8*
  call void @swift_beginAccess(i8* %7, [24 x i8]* %access-scratch, i64 33, i8* null) #2
  %._guts = getelementptr inbounds %TSS, %TSS* %5, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %3, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %4, %swift.bridge** %._guts._object._object, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #2
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %8)
  ret %T3AppAAC* %0
}
define hidden swiftcc i64 @"$s3App3add1a1bS2i_SitF"(i64 %0, i64 %1) #0 {
entry:
  %a.debug = alloca i64, align 8
  %2 = bitcast i64* %a.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %b.debug = alloca i64, align 8
  %3 = bitcast i64* %b.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %sum.debug = alloca i64, align 8
  %4 = bitcast i64* %sum.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 8, i1 false)
  store i64 %0, i64* %a.debug, align 8
  store i64 %1, i64* %b.debug, align 8
  %5 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %0, i64 %1)
  %6 = extractvalue { i64, i1 } %5, 0
  %7 = extractvalue { i64, i1 } %5, 1
  %8 = call i1 @llvm.expect.i1(i1 %7, i1 false)
  br i1 %8, label %10, label %9

9:                                                ; preds = %entry
  store i64 %6, i64* %sum.debug, align 8
  ret i64 %6

10:                                               ; preds = %entry
  call void @llvm.trap()
  unreachable
}
; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6
; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #7
; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8
; Function Attrs: noinline nounwind readnone
define hidden swiftcc %swift.metadata_response @"$s3AppAACMa"(i64 %0) #9 {
entry:
  %1 = call %objc_class* @objc_opt_self(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T3AppAAC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, %swift.bridge* } (%T3AppAAC*)*, void (i64, %swift.bridge*, %T3AppAAC*)*, { i8*, %TSS* } (i8*, %T3AppAAC*)*, { i64, %swift.bridge* } (%T3AppAAC*)*, %T3AppAAC* (%swift.type*)* }>, <{ void (%T3AppAAC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, %swift.bridge* } (%T3AppAAC*)*, void (i64, %swift.bridge*, %T3AppAAC*)*, { i8*, %TSS* } (i8*, %T3AppAAC*)*, { i64, %swift.bridge* } (%T3AppAAC*)*, %T3AppAAC* (%swift.type*)* }>* @"$s3AppAACMf", i32 0, i32 2) to %objc_class*))
  %2 = bitcast %objc_class* %1 to %swift.type*
  %3 = insertvalue %swift.metadata_response undef, %swift.type* %2, 0
  %4 = insertvalue %swift.metadata_response %3, i64 0, 1
  ret %swift.metadata_response %4
}
; Function Attrs: nounwind
declare %objc_class* @objc_opt_self(%objc_class*) #2
declare extern_weak void @"_swift_FORCE_LOAD_$_swiftCompatibility51"()
; Function Attrs: alwaysinline
define private void @coro.devirt.trigger(i8* %0) #10 {
entry:
  ret void
}

attributes #0 = { "frame-pointer"="all" "probe-stack"="__chkstk_darwin" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nounwind }
attributes #3 = { noinline "frame-pointer"="all" "probe-stack"="__chkstk_darwin" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" }
attributes #4 = { argmemonly nounwind willreturn writeonly }
attributes #5 = { noinline nounwind "frame-pointer"="all" "probe-stack"="__chkstk_darwin" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" }
attributes #6 = { nounwind readnone speculatable willreturn }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind readnone "frame-pointer"="none" "probe-stack"="__chkstk_darwin" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" }
attributes #10 = { alwaysinline }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8}
!swift.module.flags = !{!9}
!llvm.asan.globals = !{!10, !11, !12, !13, !14, !15, !16, !17, !18}
!llvm.linker.options = !{!19, !20, !21, !22}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 11, i32 1]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84084480}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 7, !"PIC Level", i32 2}
!8 = !{i32 1, !"Swift Version", i32 7}
!9 = !{!"standard-library", i1 false}
!10 = !{<{ i32, i32, i32 }>* @"$s3AppMXM", null, null, i1 false, i1 true}
!11 = !{<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s3AppAACMn", null, null, i1 false, i1 true}
!12 = !{<{ i8, i32, i8 }>* @"symbolic _____ 3AppAAC", null, null, i1 false, i1 true}
!13 = !{<{ [2 x i8], i8 }>* @"symbolic SS", null, null, i1 false, i1 true}
!14 = !{[5 x i8]* @6, null, null, i1 false, i1 true}
!15 = !{{ i32, i32, i16, i16, i32, i32, i32, i32 }* @"$s3AppAACMF", null, null, i1 false, i1 true}
!16 = !{[1 x %swift.type_metadata_record]* @"\01l_type_metadata_table", null, null, i1 false, i1 true}
!17 = !{[1 x i8*]* @objc_classes, null, null, i1 false, i1 true}
!18 = !{[7 x i8*]* @llvm.used, null, null, i1 false, i1 true}
!19 = !{!"-lswiftSwiftOnoneSupport"}
!20 = !{!"-lswiftCore"}
!21 = !{!"-lobjc"}
!22 = !{!"-lswiftCompatibility51"}